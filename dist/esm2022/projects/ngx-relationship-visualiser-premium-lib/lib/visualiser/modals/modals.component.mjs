import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
import { AbstractModalFormHandler } from './abstract-modal-form-handler';
import fontAwesomeIcons from '../../models/font-awesome-icons';
import * as i0 from "@angular/core";
import * as i1 from "ngx-bootstrap/modal";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/common";
import * as i4 from "@ng-select/ng-select";
export class ModalsComponent extends AbstractModalFormHandler {
    modalService;
    editNodeData;
    editLinksData;
    closeModalEvent = new EventEmitter();
    createLinkEvent = new EventEmitter();
    createNodeEvent = new EventEmitter();
    deleteLinkEvent = new EventEmitter();
    deleteNodeEvent = new EventEmitter();
    editNodeModal;
    createNodeModal;
    createLinkModal;
    editLinksModal;
    modalRef;
    defaultModalConfig = { class: 'modal-xl' };
    fontAwesomeIcons = fontAwesomeIcons;
    // virtual scroll
    loading = false;
    iconsBuffer = [];
    numberOfItemsFromEndBeforeFetchingMore = 10;
    bufferSize = 50;
    constructor(modalService, fb) {
        super(fb);
        this.modalService = modalService;
    }
    ngOnChanges(changes) {
        if (changes.editLinksData && this.editLinksData) {
            this.resetLinksForm();
            this.populateEditLinkForm(this.editLinksData);
        }
        if (changes.editNodeData && this.editNodeData) {
            this.resetNodeForm();
            this.populateEditNodeForm(this.editNodeData);
        }
    }
    openModal(template) {
        if (!template) {
            console.error('Template is required to open a modal.');
            return null;
        }
        if (template === this.editLinksModal && this.editLinksData) {
            this.populateEditLinkForm(this.editLinksData);
        }
        this.resetLinksForm();
        this.resetNodeForm();
        this.modalRef = this.modalService.show(template, this.defaultModalConfig);
    }
    closeModal(modalRef) {
        if (this[modalRef]) {
            this[modalRef].hide();
        }
    }
    createLink() {
        if (this.createLinkForm.valid) {
            const createLinkData = this.createLinkForm.value;
            this.createLinkEvent.emit(createLinkData);
            this.resetLinksForm();
            this.closeModal('modalRef');
        }
    }
    createNode() {
        if (this.createNodeForm.valid) {
            const createNodeData = this.createNodeForm.value;
            const payload = {
                id: createNodeData.id,
                label: createNodeData.label.map((item) => item.label),
                imageUrl: createNodeData.imageUrl,
                icon: createNodeData.icon,
                fx: createNodeData.fx,
                fy: createNodeData.fy,
                additionalIcon: createNodeData.additionalIcon,
            };
            this.createNodeEvent.emit(payload);
            this.resetNodeForm();
            this.closeModal('modalRef');
        }
    }
    deleteNode() {
        this.deleteNodeEvent.emit(true);
        this.resetNodeForm();
        this.closeModal('modalRef');
    }
    deleteLink() {
        const linkId = this.editLinksData.linkId;
        this.deleteLinkEvent.emit(linkId);
        this.resetLinksForm();
        this.closeModal('modalRef');
    }
    clearImageUrl() {
        this.createNodeForm.get('imageUrl').setValue('');
    }
    trackByFn(item) {
        return item.id;
    }
    onScrollToEnd() {
        this.fetchMore();
    }
    onScroll({ end }) {
        if (this.loading || this.fontAwesomeIcons.length <= this.iconsBuffer.length) {
            return;
        }
        if (end + this.numberOfItemsFromEndBeforeFetchingMore >=
            this.iconsBuffer.length) {
            this.fetchMore();
        }
    }
    fetchMore() {
        const len = this.iconsBuffer.length;
        const more = this.fontAwesomeIcons.slice(len, this.bufferSize + len);
        this.loading = true;
        this.loading = false;
        this.iconsBuffer = this.iconsBuffer.concat(more);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: ModalsComponent, deps: [{ token: i1.BsModalService }, { token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: ModalsComponent, selector: "app-modals", inputs: { editNodeData: "editNodeData", editLinksData: "editLinksData" }, outputs: { closeModalEvent: "closeModalEvent", createLinkEvent: "createLinkEvent", createNodeEvent: "createNodeEvent", deleteLinkEvent: "deleteLinkEvent", deleteNodeEvent: "deleteNodeEvent" }, viewQueries: [{ propertyName: "editNodeModal", first: true, predicate: ["editNodeModal"], descendants: true }, { propertyName: "createNodeModal", first: true, predicate: ["createNodeModal"], descendants: true }, { propertyName: "createLinkModal", first: true, predicate: ["createLinkModal"], descendants: true }, { propertyName: "editLinksModal", first: true, predicate: ["editLinksModal"], descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<!--EDIT NODE MODAL-->\n<ng-template #editNodeModal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit Node</h4>\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"closeModal('modalRef')\">\n      <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form [formGroup]=\"createNodeForm\">\n      <div class=\"form-group\">\n        <label for=\"iconType\">Icon Type</label>\n        <div>\n          <input type=\"radio\" id=\"imageUrl\" formControlName=\"iconType\" value=\"url\"> Image URL\n          <input class=\"ml-5\" type=\"radio\" id=\"iconTypeSelect\" formControlName=\"iconType\" value=\"select\"> Choose Icon\n        </div>\n      </div>\n      <div class=\"form-group\" *ngIf=\"createNodeForm.get('iconType').value === 'url'\">\n        <label for=\"imageUrl\">Image URL</label>\n        <div class=\"input-group\">\n          <input type=\"text\" id=\"imageUrl\" formControlName=\"imageUrl\" class=\"form-control\" placeholder=\"Image URL\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"clearImageUrl()\">Clear</button>\n        </div>\n      </div>\n      <div class=\"form-group\" *ngIf=\"createNodeForm.get('iconType').value === 'select'\">\n        <label for=\"nodeIcon\">Choose Icon</label>\n        <ng-select\n        formControlName=\"icon\"\n        [items]=\"iconsBuffer\"\n        [virtualScroll]=\"true\"\n        [loading]=\"loading\"\n        bindLabel=\"name\"\n        bindValue=\"icon\"\n        [editableSearchTerm]=\"true\"\n        placeholder=\"Select icon\"\n        appendTo=\"body\"\n        [trackByFn]=\"trackByFn\"\n        (scroll)=\"onScroll($event)\"\n        (scrollToEnd)=\"onScrollToEnd()\"\n      >\n        <ng-template ng-header-tmp>\n          <small class=\"form-text text-muted\"\n            >Loaded {{ iconsBuffer.length }} of {{ fontAwesomeIcons.length }}</small\n          >\n        </ng-template>\n        <ng-template ng-option-tmp let-item=\"item\">\n          <i class=\"fa fa-light\">{{item.icon}}</i>\n          <span class=\"ml-3\">{{ item.name }}</span>\n        </ng-template>\n      </ng-select>\n      </div>\n      <div *ngIf=\"createNodeForm.errors?.iconOrImage\" class=\"text-danger\">\n        Please provide either an Image URL or choose an Icon, but not both.\n      </div>\n      <div class=\"form-group\">\n        <label for=\"label\">Labels</label>\n        <div formArrayName=\"label\">\n          <div *ngFor=\"let label of nodeLabelArray.controls; let i = index\" [formGroupName]=\"i\"\n            class=\"d-flex flex-column align-items-start\">\n            <div class=\"d-flex align-items-center w-100\">\n              <input formControlName=\"label\" class=\"form-control mb-2\" placeholder=\"Label\" [id]=\"'node-label-' + i\">\n              <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"removeNodeLabel(i)\" [disabled]=\"nodeLabelArray.length <= 1\">Remove</button>\n            </div>\n          </div>\n        </div>\n        <button type=\"button\" class=\"btn btn-secondary mt-2\" (click)=\"addNodeLabel()\">Add Label</button>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"nodeAdditionalIcon\">Additional icon</label>\n        <ng-select\n        formControlName=\"additionalIcon\"\n        [items]=\"iconsBuffer\"\n        [virtualScroll]=\"true\"\n        [loading]=\"loading\"\n        bindLabel=\"name\"\n        bindValue=\"icon\"\n        [editableSearchTerm]=\"true\"\n        placeholder=\"Select icon\"\n        appendTo=\"body\"\n        [trackByFn]=\"trackByFn\"\n        (scroll)=\"onScroll($event)\"\n        (scrollToEnd)=\"onScrollToEnd()\"\n      >\n        <ng-template ng-header-tmp>\n          <small class=\"form-text text-muted\"\n            >Loaded {{ iconsBuffer.length }} of {{ fontAwesomeIcons.length }}</small\n          >\n        </ng-template>\n        <ng-template ng-option-tmp let-item=\"item\">\n          <i class=\"fa fa-light\">{{item.icon}}</i>\n          <span class=\"ml-3\">{{ item.name }}</span>\n        </ng-template>\n      </ng-select>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('modalRef')\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"createNode()\" [disabled]=\"!createNodeForm.valid\">Save Changes</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteNode()\">Delete Node</button>\n  </div>\n</ng-template>\n<!-- ./MODAL-->\n\n<!--CREATE NODE MODAL-->\n<ng-template #createNodeModal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Create Node</h4>\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"closeModal('modalRef')\">\n      <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form [formGroup]=\"createNodeForm\">\n      <div class=\"form-group\">\n        <label for=\"iconType\">Icon Type</label>\n        <div>\n          <input type=\"radio\" id=\"imageUrl\" formControlName=\"iconType\" value=\"url\"> Image URL\n          <input class=\"ml-5\" type=\"radio\" id=\"iconTypeSelect\" formControlName=\"iconType\" value=\"select\"> Choose Icon\n        </div>\n      </div>\n      <div class=\"form-group\" *ngIf=\"createNodeForm.get('iconType').value === 'url'\">\n        <label for=\"imageUrl\">Image URL</label>\n        <div class=\"input-group\">\n          <input type=\"text\" id=\"imageUrl\" formControlName=\"imageUrl\" class=\"form-control\" placeholder=\"Image URL\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"clearImageUrl()\">Clear</button>\n        </div>\n      </div>\n      <div class=\"form-group\" *ngIf=\"createNodeForm.get('iconType').value === 'select'\">\n        <label for=\"nodeIcon\">Choose Icon</label>\n        <ng-select\n        formControlName=\"icon\"\n        [items]=\"iconsBuffer\"\n        [virtualScroll]=\"true\"\n        [loading]=\"loading\"\n        bindLabel=\"name\"\n        bindValue=\"icon\"\n        [editableSearchTerm]=\"true\"\n        placeholder=\"Select icon\"\n        appendTo=\"body\"\n        [trackByFn]=\"trackByFn\"\n        (scroll)=\"onScroll($event)\"\n        (scrollToEnd)=\"onScrollToEnd()\"\n      >\n        <ng-template ng-header-tmp>\n          <small class=\"form-text text-muted\"\n            >Loaded {{ iconsBuffer.length }} of {{ fontAwesomeIcons.length }}</small\n          >\n        </ng-template>\n        <ng-template ng-option-tmp let-item=\"item\">\n          <i class=\"fa fa-light\">{{item.icon}}</i>\n          <span class=\"ml-3\">{{ item.name }}</span>\n        </ng-template>\n      </ng-select>\n      </div>\n      <div *ngIf=\"createNodeForm.errors?.iconOrImage\" class=\"text-danger\">\n        Please provide either an Image URL or choose an Icon, but not both.\n      </div>\n      <div class=\"form-group\">\n        <label for=\"label\">Labels</label>\n        <div formArrayName=\"label\">\n          <div *ngFor=\"let label of nodeLabelArray.controls; let i = index\" [formGroupName]=\"i\"\n            class=\"d-flex flex-column align-items-start\">\n            <div class=\"d-flex align-items-center w-100\">\n              <input formControlName=\"label\" class=\"form-control mb-2\" placeholder=\"Label\" [id]=\"'node-label-' + i\">\n              <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"removeNodeLabel(i)\" [disabled]=\"nodeLabelArray.length <= 1\">Remove</button>\n            </div>\n          </div>\n        </div>\n        <button type=\"button\" class=\"btn btn-secondary mt-2\" (click)=\"addNodeLabel()\">Add Label</button>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"nodeAdditionalIcon\">Additional icon</label>\n        <ng-select\n        formControlName=\"additionalIcon\"\n        [items]=\"iconsBuffer\"\n        [virtualScroll]=\"true\"\n        [loading]=\"loading\"\n        bindLabel=\"name\"\n        bindValue=\"icon\"\n        [editableSearchTerm]=\"true\"\n        placeholder=\"Select icon\"\n        appendTo=\"body\"\n        [trackByFn]=\"trackByFn\"\n        (scroll)=\"onScroll($event)\"\n        (scrollToEnd)=\"onScrollToEnd()\"\n      >\n        <ng-template ng-header-tmp>\n          <small class=\"form-text text-muted\"\n            >Loaded {{ iconsBuffer.length }} of {{ fontAwesomeIcons.length }}</small\n          >\n        </ng-template>\n        <ng-template ng-option-tmp let-item=\"item\">\n          <i class=\"fa fa-light\">{{item.icon}}</i>\n          <span class=\"ml-3\">{{ item.name }}</span>\n        </ng-template>\n      </ng-select>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('modalRef')\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"createNode()\" [disabled]=\"!createNodeForm.valid\">Create Node</button>\n  </div>\n</ng-template>\n<!-- ./MODAL-->\n\n<!--EDIT LINKS MODAL-->\n<ng-template #editLinksModal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit Links</h4>\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"closeModal('modalRef')\">\n      <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form [formGroup]=\"createLinkForm\">\n      <div class=\"form-group\">\n        <label for=\"lineStyle\">Line Style</label>\n        <select id=\"lineStyle\" formControlName=\"lineStyle\" class=\"form-control\">\n          <option value=\"Solid\">Solid</option>\n          <option value=\"Dotted\">Dotted</option>\n        </select>\n      </div>\n      <div class=\"form-group form-check\">\n        <input type=\"checkbox\" id=\"sourceArrow\" formControlName=\"sourceArrow\" class=\"form-check-input\">\n        <label for=\"sourceArrow\">Source Arrow</label>\n      </div>\n      <div class=\"form-group form-check\">\n        <input type=\"checkbox\" id=\"targetArrow\" formControlName=\"targetArrow\" class=\"form-check-input\">\n        <label for=\"targetArrow\">Target Arrow</label>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"label\">Labels</label>\n        <div formArrayName=\"label\">\n          <div *ngFor=\"let label of labelArray.controls; let i = index\" [formGroupName]=\"i\"\n            class=\"d-flex flex-column align-items-start\">\n            <div class=\"d-flex align-items-center w-100\">\n              <input formControlName=\"label\" class=\"form-control\" placeholder=\"Label\" [id]=\"'label-' + i\">\n              <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"removeLabel(i)\" [disabled]=\"labelArray.length <= 1\">Remove</button>\n            </div>\n            <div class=\"form-group form-check\">\n              <input type=\"checkbox\" formControlName=\"linkIcon\" class=\"form-check-input\" [id]=\"'linkIcon-' + i\">\n              <label [for]=\"'linkIcon-' + i\">Link Icon?</label>\n            </div>\n          </div>\n        </div>\n        <button type=\"button\" class=\"btn btn-secondary mt-2\" (click)=\"addLabel()\">Add Label</button>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('modalRef')\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"createLink()\" [disabled]=\"!createLinkForm.valid\">Save Changes</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteLink()\">Delete Link</button>\n  </div>\n</ng-template>\n<!-- ./MODAL-->\n\n\n<!--CREATE LINK MODAL-->\n<ng-template #createLinkModal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Create Link</h4>\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"closeModal('modalRef')\">\n      <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form [formGroup]=\"createLinkForm\">\n      <div class=\"form-group\">\n        <label for=\"lineStyle\">Line Style</label>\n        <select id=\"lineStyle\" formControlName=\"lineStyle\" class=\"form-control\">\n          <option value=\"Solid\">Solid</option>\n          <option value=\"Dotted\">Dotted</option>\n        </select>\n      </div>\n      <div class=\"form-group form-check\">\n        <input type=\"checkbox\" id=\"sourceArrow\" formControlName=\"sourceArrow\" class=\"form-check-input\">\n        <label for=\"sourceArrow\">Source Arrow</label>\n      </div>\n      <div class=\"form-group form-check\">\n        <input type=\"checkbox\" id=\"targetArrow\" formControlName=\"targetArrow\" class=\"form-check-input\">\n        <label for=\"targetArrow\">Target Arrow</label>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"label\">Labels</label>\n        <div formArrayName=\"label\">\n          <div *ngFor=\"let label of labelArray.controls; let i = index\" [formGroupName]=\"i\"\n            class=\"d-flex flex-column align-items-start\">\n            <div class=\"d-flex align-items-center w-100\">\n              <input formControlName=\"label\" class=\"form-control\" placeholder=\"Label\" [id]=\"'label-' + i\">\n              <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"removeLabel(i)\" [disabled]=\"labelArray.length <= 1\">Remove</button>\n            </div>\n            <div class=\"form-group form-check\">\n              <input type=\"checkbox\" formControlName=\"linkIcon\" class=\"form-check-input\" [id]=\"'linkIcon-' + i\">\n              <label [for]=\"'linkIcon-' + i\">Link Icon?</label>\n            </div>\n          </div>\n        </div>\n        <button type=\"button\" class=\"btn btn-secondary mt-2\" (click)=\"addLabel()\">Add Label</button>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('modalRef')\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"createLink()\" [disabled]=\"!createLinkForm.valid\">Create Link</button>\n  </div>\n</ng-template>\n<!-- ./MODAL-->", dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i2.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i2.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i2.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i2.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i2.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { kind: "directive", type: i2.FormArrayName, selector: "[formArrayName]", inputs: ["formArrayName"] }, { kind: "component", type: i4.NgSelectComponent, selector: "ng-select", inputs: ["ariaLabelDropdown", "bindLabel", "bindValue", "ariaLabel", "markFirst", "placeholder", "fixedPlaceholder", "notFoundText", "typeToSearchText", "preventToggleOnRightClick", "addTagText", "loadingText", "clearAllText", "appearance", "dropdownPosition", "appendTo", "loading", "closeOnSelect", "hideSelected", "selectOnTab", "openOnEnter", "maxSelectedItems", "groupBy", "groupValue", "bufferAmount", "virtualScroll", "selectableGroup", "selectableGroupAsModel", "searchFn", "trackByFn", "clearOnBackspace", "labelForId", "inputAttrs", "tabIndex", "readonly", "searchWhileComposing", "minTermLength", "editableSearchTerm", "ngClass", "typeahead", "multiple", "addTag", "searchable", "clearable", "isOpen", "items", "compareWith", "clearSearchOnAdd", "deselectOnClick", "keyDownFn"], outputs: ["blur", "focus", "change", "open", "close", "search", "clear", "add", "remove", "scroll", "scrollToEnd"] }, { kind: "directive", type: i4.NgOptionTemplateDirective, selector: "[ng-option-tmp]" }, { kind: "directive", type: i4.NgHeaderTemplateDirective, selector: "[ng-header-tmp]" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: ModalsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-modals', template: "<!--EDIT NODE MODAL-->\n<ng-template #editNodeModal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit Node</h4>\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"closeModal('modalRef')\">\n      <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form [formGroup]=\"createNodeForm\">\n      <div class=\"form-group\">\n        <label for=\"iconType\">Icon Type</label>\n        <div>\n          <input type=\"radio\" id=\"imageUrl\" formControlName=\"iconType\" value=\"url\"> Image URL\n          <input class=\"ml-5\" type=\"radio\" id=\"iconTypeSelect\" formControlName=\"iconType\" value=\"select\"> Choose Icon\n        </div>\n      </div>\n      <div class=\"form-group\" *ngIf=\"createNodeForm.get('iconType').value === 'url'\">\n        <label for=\"imageUrl\">Image URL</label>\n        <div class=\"input-group\">\n          <input type=\"text\" id=\"imageUrl\" formControlName=\"imageUrl\" class=\"form-control\" placeholder=\"Image URL\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"clearImageUrl()\">Clear</button>\n        </div>\n      </div>\n      <div class=\"form-group\" *ngIf=\"createNodeForm.get('iconType').value === 'select'\">\n        <label for=\"nodeIcon\">Choose Icon</label>\n        <ng-select\n        formControlName=\"icon\"\n        [items]=\"iconsBuffer\"\n        [virtualScroll]=\"true\"\n        [loading]=\"loading\"\n        bindLabel=\"name\"\n        bindValue=\"icon\"\n        [editableSearchTerm]=\"true\"\n        placeholder=\"Select icon\"\n        appendTo=\"body\"\n        [trackByFn]=\"trackByFn\"\n        (scroll)=\"onScroll($event)\"\n        (scrollToEnd)=\"onScrollToEnd()\"\n      >\n        <ng-template ng-header-tmp>\n          <small class=\"form-text text-muted\"\n            >Loaded {{ iconsBuffer.length }} of {{ fontAwesomeIcons.length }}</small\n          >\n        </ng-template>\n        <ng-template ng-option-tmp let-item=\"item\">\n          <i class=\"fa fa-light\">{{item.icon}}</i>\n          <span class=\"ml-3\">{{ item.name }}</span>\n        </ng-template>\n      </ng-select>\n      </div>\n      <div *ngIf=\"createNodeForm.errors?.iconOrImage\" class=\"text-danger\">\n        Please provide either an Image URL or choose an Icon, but not both.\n      </div>\n      <div class=\"form-group\">\n        <label for=\"label\">Labels</label>\n        <div formArrayName=\"label\">\n          <div *ngFor=\"let label of nodeLabelArray.controls; let i = index\" [formGroupName]=\"i\"\n            class=\"d-flex flex-column align-items-start\">\n            <div class=\"d-flex align-items-center w-100\">\n              <input formControlName=\"label\" class=\"form-control mb-2\" placeholder=\"Label\" [id]=\"'node-label-' + i\">\n              <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"removeNodeLabel(i)\" [disabled]=\"nodeLabelArray.length <= 1\">Remove</button>\n            </div>\n          </div>\n        </div>\n        <button type=\"button\" class=\"btn btn-secondary mt-2\" (click)=\"addNodeLabel()\">Add Label</button>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"nodeAdditionalIcon\">Additional icon</label>\n        <ng-select\n        formControlName=\"additionalIcon\"\n        [items]=\"iconsBuffer\"\n        [virtualScroll]=\"true\"\n        [loading]=\"loading\"\n        bindLabel=\"name\"\n        bindValue=\"icon\"\n        [editableSearchTerm]=\"true\"\n        placeholder=\"Select icon\"\n        appendTo=\"body\"\n        [trackByFn]=\"trackByFn\"\n        (scroll)=\"onScroll($event)\"\n        (scrollToEnd)=\"onScrollToEnd()\"\n      >\n        <ng-template ng-header-tmp>\n          <small class=\"form-text text-muted\"\n            >Loaded {{ iconsBuffer.length }} of {{ fontAwesomeIcons.length }}</small\n          >\n        </ng-template>\n        <ng-template ng-option-tmp let-item=\"item\">\n          <i class=\"fa fa-light\">{{item.icon}}</i>\n          <span class=\"ml-3\">{{ item.name }}</span>\n        </ng-template>\n      </ng-select>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('modalRef')\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"createNode()\" [disabled]=\"!createNodeForm.valid\">Save Changes</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteNode()\">Delete Node</button>\n  </div>\n</ng-template>\n<!-- ./MODAL-->\n\n<!--CREATE NODE MODAL-->\n<ng-template #createNodeModal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Create Node</h4>\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"closeModal('modalRef')\">\n      <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form [formGroup]=\"createNodeForm\">\n      <div class=\"form-group\">\n        <label for=\"iconType\">Icon Type</label>\n        <div>\n          <input type=\"radio\" id=\"imageUrl\" formControlName=\"iconType\" value=\"url\"> Image URL\n          <input class=\"ml-5\" type=\"radio\" id=\"iconTypeSelect\" formControlName=\"iconType\" value=\"select\"> Choose Icon\n        </div>\n      </div>\n      <div class=\"form-group\" *ngIf=\"createNodeForm.get('iconType').value === 'url'\">\n        <label for=\"imageUrl\">Image URL</label>\n        <div class=\"input-group\">\n          <input type=\"text\" id=\"imageUrl\" formControlName=\"imageUrl\" class=\"form-control\" placeholder=\"Image URL\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"clearImageUrl()\">Clear</button>\n        </div>\n      </div>\n      <div class=\"form-group\" *ngIf=\"createNodeForm.get('iconType').value === 'select'\">\n        <label for=\"nodeIcon\">Choose Icon</label>\n        <ng-select\n        formControlName=\"icon\"\n        [items]=\"iconsBuffer\"\n        [virtualScroll]=\"true\"\n        [loading]=\"loading\"\n        bindLabel=\"name\"\n        bindValue=\"icon\"\n        [editableSearchTerm]=\"true\"\n        placeholder=\"Select icon\"\n        appendTo=\"body\"\n        [trackByFn]=\"trackByFn\"\n        (scroll)=\"onScroll($event)\"\n        (scrollToEnd)=\"onScrollToEnd()\"\n      >\n        <ng-template ng-header-tmp>\n          <small class=\"form-text text-muted\"\n            >Loaded {{ iconsBuffer.length }} of {{ fontAwesomeIcons.length }}</small\n          >\n        </ng-template>\n        <ng-template ng-option-tmp let-item=\"item\">\n          <i class=\"fa fa-light\">{{item.icon}}</i>\n          <span class=\"ml-3\">{{ item.name }}</span>\n        </ng-template>\n      </ng-select>\n      </div>\n      <div *ngIf=\"createNodeForm.errors?.iconOrImage\" class=\"text-danger\">\n        Please provide either an Image URL or choose an Icon, but not both.\n      </div>\n      <div class=\"form-group\">\n        <label for=\"label\">Labels</label>\n        <div formArrayName=\"label\">\n          <div *ngFor=\"let label of nodeLabelArray.controls; let i = index\" [formGroupName]=\"i\"\n            class=\"d-flex flex-column align-items-start\">\n            <div class=\"d-flex align-items-center w-100\">\n              <input formControlName=\"label\" class=\"form-control mb-2\" placeholder=\"Label\" [id]=\"'node-label-' + i\">\n              <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"removeNodeLabel(i)\" [disabled]=\"nodeLabelArray.length <= 1\">Remove</button>\n            </div>\n          </div>\n        </div>\n        <button type=\"button\" class=\"btn btn-secondary mt-2\" (click)=\"addNodeLabel()\">Add Label</button>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"nodeAdditionalIcon\">Additional icon</label>\n        <ng-select\n        formControlName=\"additionalIcon\"\n        [items]=\"iconsBuffer\"\n        [virtualScroll]=\"true\"\n        [loading]=\"loading\"\n        bindLabel=\"name\"\n        bindValue=\"icon\"\n        [editableSearchTerm]=\"true\"\n        placeholder=\"Select icon\"\n        appendTo=\"body\"\n        [trackByFn]=\"trackByFn\"\n        (scroll)=\"onScroll($event)\"\n        (scrollToEnd)=\"onScrollToEnd()\"\n      >\n        <ng-template ng-header-tmp>\n          <small class=\"form-text text-muted\"\n            >Loaded {{ iconsBuffer.length }} of {{ fontAwesomeIcons.length }}</small\n          >\n        </ng-template>\n        <ng-template ng-option-tmp let-item=\"item\">\n          <i class=\"fa fa-light\">{{item.icon}}</i>\n          <span class=\"ml-3\">{{ item.name }}</span>\n        </ng-template>\n      </ng-select>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('modalRef')\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"createNode()\" [disabled]=\"!createNodeForm.valid\">Create Node</button>\n  </div>\n</ng-template>\n<!-- ./MODAL-->\n\n<!--EDIT LINKS MODAL-->\n<ng-template #editLinksModal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit Links</h4>\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"closeModal('modalRef')\">\n      <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form [formGroup]=\"createLinkForm\">\n      <div class=\"form-group\">\n        <label for=\"lineStyle\">Line Style</label>\n        <select id=\"lineStyle\" formControlName=\"lineStyle\" class=\"form-control\">\n          <option value=\"Solid\">Solid</option>\n          <option value=\"Dotted\">Dotted</option>\n        </select>\n      </div>\n      <div class=\"form-group form-check\">\n        <input type=\"checkbox\" id=\"sourceArrow\" formControlName=\"sourceArrow\" class=\"form-check-input\">\n        <label for=\"sourceArrow\">Source Arrow</label>\n      </div>\n      <div class=\"form-group form-check\">\n        <input type=\"checkbox\" id=\"targetArrow\" formControlName=\"targetArrow\" class=\"form-check-input\">\n        <label for=\"targetArrow\">Target Arrow</label>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"label\">Labels</label>\n        <div formArrayName=\"label\">\n          <div *ngFor=\"let label of labelArray.controls; let i = index\" [formGroupName]=\"i\"\n            class=\"d-flex flex-column align-items-start\">\n            <div class=\"d-flex align-items-center w-100\">\n              <input formControlName=\"label\" class=\"form-control\" placeholder=\"Label\" [id]=\"'label-' + i\">\n              <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"removeLabel(i)\" [disabled]=\"labelArray.length <= 1\">Remove</button>\n            </div>\n            <div class=\"form-group form-check\">\n              <input type=\"checkbox\" formControlName=\"linkIcon\" class=\"form-check-input\" [id]=\"'linkIcon-' + i\">\n              <label [for]=\"'linkIcon-' + i\">Link Icon?</label>\n            </div>\n          </div>\n        </div>\n        <button type=\"button\" class=\"btn btn-secondary mt-2\" (click)=\"addLabel()\">Add Label</button>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('modalRef')\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"createLink()\" [disabled]=\"!createLinkForm.valid\">Save Changes</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteLink()\">Delete Link</button>\n  </div>\n</ng-template>\n<!-- ./MODAL-->\n\n\n<!--CREATE LINK MODAL-->\n<ng-template #createLinkModal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Create Link</h4>\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"closeModal('modalRef')\">\n      <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form [formGroup]=\"createLinkForm\">\n      <div class=\"form-group\">\n        <label for=\"lineStyle\">Line Style</label>\n        <select id=\"lineStyle\" formControlName=\"lineStyle\" class=\"form-control\">\n          <option value=\"Solid\">Solid</option>\n          <option value=\"Dotted\">Dotted</option>\n        </select>\n      </div>\n      <div class=\"form-group form-check\">\n        <input type=\"checkbox\" id=\"sourceArrow\" formControlName=\"sourceArrow\" class=\"form-check-input\">\n        <label for=\"sourceArrow\">Source Arrow</label>\n      </div>\n      <div class=\"form-group form-check\">\n        <input type=\"checkbox\" id=\"targetArrow\" formControlName=\"targetArrow\" class=\"form-check-input\">\n        <label for=\"targetArrow\">Target Arrow</label>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"label\">Labels</label>\n        <div formArrayName=\"label\">\n          <div *ngFor=\"let label of labelArray.controls; let i = index\" [formGroupName]=\"i\"\n            class=\"d-flex flex-column align-items-start\">\n            <div class=\"d-flex align-items-center w-100\">\n              <input formControlName=\"label\" class=\"form-control\" placeholder=\"Label\" [id]=\"'label-' + i\">\n              <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"removeLabel(i)\" [disabled]=\"labelArray.length <= 1\">Remove</button>\n            </div>\n            <div class=\"form-group form-check\">\n              <input type=\"checkbox\" formControlName=\"linkIcon\" class=\"form-check-input\" [id]=\"'linkIcon-' + i\">\n              <label [for]=\"'linkIcon-' + i\">Link Icon?</label>\n            </div>\n          </div>\n        </div>\n        <button type=\"button\" class=\"btn btn-secondary mt-2\" (click)=\"addLabel()\">Add Label</button>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('modalRef')\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"createLink()\" [disabled]=\"!createLinkForm.valid\">Create Link</button>\n  </div>\n</ng-template>\n<!-- ./MODAL-->" }]
        }], ctorParameters: () => [{ type: i1.BsModalService }, { type: i2.FormBuilder }], propDecorators: { editNodeData: [{
                type: Input
            }], editLinksData: [{
                type: Input
            }], closeModalEvent: [{
                type: Output
            }], createLinkEvent: [{
                type: Output
            }], createNodeEvent: [{
                type: Output
            }], deleteLinkEvent: [{
                type: Output
            }], deleteNodeEvent: [{
                type: Output
            }], editNodeModal: [{
                type: ViewChild,
                args: ['editNodeModal']
            }], createNodeModal: [{
                type: ViewChild,
                args: ['createNodeModal']
            }], createLinkModal: [{
                type: ViewChild,
                args: ['createLinkModal']
            }], editLinksModal: [{
                type: ViewChild,
                args: ['editLinksModal']
            }] } });
//# sourceMappingURL=data:application/json;base64,