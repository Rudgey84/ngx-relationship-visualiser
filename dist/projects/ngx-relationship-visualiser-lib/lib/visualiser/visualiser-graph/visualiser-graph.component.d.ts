import { ElementRef, EventEmitter, OnInit, AfterViewInit } from '@angular/core';
import { VisualiserGraphService } from '../services/visualiser-graph.service';
import { DagreNodesOnlyLayout } from '../services/dagre-layout.service';
import { ContextMenuService } from '@kreash/ngx-contextmenu';
import { ContextMenusComponent } from '../context-menus/context-menus.component';
import { Data } from '../../models/data.interface';
import { ModalsComponent } from '../modals/modals.component';
import { DexieService } from '../../db/graphDatabase';
import * as i0 from "@angular/core";
export declare class VisualiserGraphComponent implements OnInit, AfterViewInit {
    readonly visualiserGraphService: VisualiserGraphService;
    readonly contextMenuService: ContextMenuService;
    readonly dagreNodesOnlyLayout: DagreNodesOnlyLayout;
    private dexieService;
    graphElement: ElementRef;
    contextMenu: ContextMenusComponent;
    saveGraphDataEvent: EventEmitter<any>;
    selectedNodesArray: any;
    selectedNodeId: any;
    selectedLinkArray: any;
    saveGraphData: any;
    width: any;
    showSearch: boolean;
    savedGraphData: Data;
    showConfirmation: boolean;
    buttonBarRightPosition: string;
    editLinksData: any;
    editNodeData: any;
    private readOnly;
    zoom: boolean;
    controls: boolean;
    zoomToFit: boolean;
    modalsComponent: ModalsComponent;
    constructor(visualiserGraphService: VisualiserGraphService, contextMenuService: ContextMenuService, dagreNodesOnlyLayout: DagreNodesOnlyLayout, dexieService: DexieService);
    set data(data: Data);
    ngOnInit(): void;
    toggleSearch(): void;
    onResize(event: any): void;
    updateWidth(): void;
    visualiserContextMenus(event: any): Promise<void>;
    findCreateNodesEvent(action: string): void;
    private opencreateNodeModal;
    onConfirmSave(): Promise<void>;
    onCreateNode(nodeData: any): Promise<void>;
    onCreateLink(linkData: any): Promise<void>;
    onDeleteNode(): Promise<void>;
    onDeleteLink(linkId: any): Promise<void>;
    onEditLinkLabel(): Promise<void>;
    handleEditLinksEvent(event: {
        open: boolean;
        data: any;
    }): void;
    handleEditNodesEvent(event: any): Promise<void>;
    resetGraph(): Promise<void>;
    applyLayout(): Promise<void>;
    private disableButtons;
    private showConfirmationMessage;
    private enableButtons;
    ngAfterViewInit(): void;
    private registerDragElement;
    openModal(modal: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<VisualiserGraphComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<VisualiserGraphComponent, "visualiser-graph", never, { "zoom": { "alias": "zoom"; "required": false; }; "zoomToFit": { "alias": "zoomToFit"; "required": false; }; "data": { "alias": "data"; "required": false; }; }, { "saveGraphDataEvent": "saveGraphDataEvent"; }, never, never, false, never>;
}
